datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

enum NotificationType {
  newPosts
  newComments
  newFollowers
  reply
  heartOnPost
  heartOnComment
  heartOnReply
}

enum Language {
  Typescript
  Javascript
  Rust
  Go
  Python
  Cpp
}

enum State {
  Active
  Pending
  Banned
}

model Product {
  id            Int         @id
  title         String      @db.VarChar(255)
  desc          String      @db.VarChar(1024)
  images        Json        @db.Json
  isShown       Boolean?    @default(false)
  stock         Int?        @default(0)
  type          State
  averageRating Float?
  categoryId    Int
  companyId     Int
  category      Category    @relation(fields: [categoryId], references: [id])
  company       Company     @relation(fields: [companyId], references: [id])
  createdAt     DateTime    @default(now()) @db.Timestamp(6)
  updatedAt     DateTime    @updatedAt @db.Timestamp(6)
}

model Category {
  id       Int       @id
  products Product[]
}

model Company {
  id          Int       @id
  name        String
  totalIncome BigInt
  lat         Decimal
  lng         Decimal
  by          Bytes
  products    Product[]
}
